name: dev CI/CD
run-name: Develop deploying (Docker)
on:
  push:
    branches:
      - dev
      - feature/docker-image
  workflow_dispatch:


env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: chunsik-deployments
  # AWS_CODE_DEPLOY_APPLICATION: ${{ vars.AWS_CODE_DEPLOY_APPLICATION }}
  # AWS_CODE_DEPLOY_GROUP: ${{ vars.AWS_CODE_DEPLOY_GROUP }}
  ECR_REPOSITORY: chunsik/dev/be

jobs:
  build-with-gradle:
    environment: dev
    runs-on: ubuntu-20.04
    steps:
      - name: dev 브랜치로 이동
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.SUBMODULE_SECRET }}
          submodules: true
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: JDK 17 설치
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          # SENTRY_URL: https://sentry.io/
        with:
          environment: dev
          ignore_missing: true

      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_USER_ID }}
          aws-secret-access-key: ${{ secrets.AWS_USER_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: gradlew에 실행 권한 부여
        run: chmod +x ./gradlew

      - name: Jar 빌드
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: ./gradlew bootJar

      - name: Create Docker Buildx builder
        run: docker buildx create --use

      - name: Build Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker buildx build \
            --platform=linux/arm64 \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --build-arg SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} \
            .

      - name: Push Docker image to Amazon ECR
        id: push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUTEGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT